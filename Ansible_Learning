
Important files:

ansible.cfg
- Ansible configuation file path : /etc/ansible/ansible.cfg
- Uncomment below line in ansible.cfg file to disable SSH key host checking
  #host_key_checking = False
- Read and understand the file.

host file
- It is an inventory file which contains all the hosts when are managed by ansible.
-  In ansible command if you specify -i inventory then it will look into the inventory file(/etc/ansible/inventory) else it will look into the mail host file (/etc/ansible/hosts)

Adhoc-Commands
- ansible 10.0.3.60 -m ping -u root -i hosts
- ansible 10.0.3.60 -m ping -u root
- ansible 10.0.3.60 -a "free -m" -u root -i hosts
- ansible web -a "apt-get update" -u root -i hosts
- ansible web -a "apt-get -y install nginx" -u root -i hosts
- ansible web -m service -a "name=nginx state=resarted" -u root -i hosts
- add the hosts in /etc/ansible/hosts file
- ansible 10.0.3.60 -u dbuser -m ping -i hosts --ask-pass
- ansible dbservers -u dbuser -m ping -i hosts --ask-pass
- ansible dbservers -u dbuser -m ping -i hosts
- ansible 10.0.3.43 -m ping -e 'ansible_python_interpreter=/usr/bin/python3'
- root@satya-System-Product-Name:/etc/ansible# ansible dbservers -m ping -e 'ansible_python_interpreter=/usr/bin/python3' -i hosts -u dbuser --ask-pass
- ssh login issue for root
	inside container, open /etc/ssh/sshd_config and change PermitRootLogin to yes.
	restart the ssh service : service ssh restart
- ansible 10.0.3.60 -a "apt update" -u root -i hosts -e 'ansible_python_interpreter=/usr/bin/python3' --ask-pass
- ansible dbservers -a "apt -y install nginx" -i /etc/ansible/hosts -u root --ask-pass
- ansible dbservers -m service -a "name=nginx state=restarted" -i /etc/ansible/hosts -u root --ask-pass
- sudo ansible-playbook Web_Package.yml -i inventory --become-user=ubuntu -
k --ask-become-pass

sudo echo "route add -net 192.168.0.0 netmask 255.255.255.0 gw 192.168.0.1 >> /etc/rc.local

Playbooks
- root@satya-System-Product-Name:/etc/ansible/playbooks# ansible-playbook prepare_ansible_target.yml -i /etc/ansible/hosts -u ubuntu -k --ask-sudo-pass
- root@satya-System-Product-Name:/media/satya/EXTHDD1/DATA/Learning/Ansible-Learning/playbooks# ansible-playbook prepare_ansible_target.yml -i /etc/ansible/hosts -u ubuntu -k --ask-sudo-pass
- 


Modules Common Modules
- Package Management

- Files and Directories

- System

- Various Useful

Variables and Facts
- Variable Scopes: Global variables, Per-Play variables and Per-host variables
- Variables cannot start with a numbers
- variables are referenced with Jinjar2 {{ }} syntax
- ansible 10.0.3.134 -m setup -u root
- 

Debuging
- ansible-playbook uptime.yml -i inventory -u root -vvv   /Running the playbook in verbosity mode/

http://jinja.procoo.org/docs/dev/templates/    /Jinja template docmentation/


Three Ansible Products:
- Ansible Core : Command line open source automation platform.
- Ansible Tower : Web Application that adds RBAC, Centralized logging and REST API for ansible.
- Ansible Galaxy : It is a website where you can find large catalogues of community created roles.


- Ansible is good at four different functions:
Change Management
Provisioning - Transitioning a system from one state to different state
Automation and
Orchestration

-IDEMPOTENCE
A function is idempotent if repeated application has the same affect as the single applicaiton.

- Benifits of Ansible(why to use ansible) (clear,faster,complete,efficient and secure)
Its clean
No agents 
No database
No residual software
No complex upgrades

- Built in Security
 Uses SSH
 Root/Sudo Usage
 Encrypted Valut
 No PKI needed
 
- Easy to Extend
 URLs / RESTFull calls
 Shell Commands
 Scripts
 Ansible Galaxy
 
-Five Main Components of Ansible
 Inventory
 Playbooks
 Modules
 Ansible Config
 Python 
 
 Variables- 3kinds
 host variables - Use Defined in inventory/host per host or group
 Fact variables - Use Data gathered from remote managed host
 Dynamic Variables - Use Data gatherred by tasks or created at runtime and destoryed later
 
 
  
 Troubleshooting steps for ssh issues to login to cisco routers
 - add the below lines to /etc/ansible/ansible.cfg file
 host_key_checking=False
 transport   = paramiko
 timeout     = 5

Network Devices Adhoc commands
- sudo ansible cisco_routers -m raw -a 'ping 192.168.0.106' -i inventory     \ping from cisco devices to the ansible host\
- 
 
Server Adhoc Commands
- sudo ansible webservers -i inventory -m raw -a "apt-get -y upgrade" -e "ansible_python_interpreter=/usr/bin/python3" --become --ask-sudo-pass       /run as a different user on local and remoter server on ubuntu/
- sudo ansible webservers -i inventory -m raw -a "apt-get  update" -e "ansible_python_interpreter=/usr/bin/python3" --become --ask-sudo-pass
- sudo ansible allservers -i inventory -m raw -a "apt-get -y install python" -e "ansible_python_interpreter=/usr/bin/python3" --become --ask-sudo-pass
- sudo ansible allservers -i inventory -m raw -a "apt-get update" --become --ask-sudo-pass
- sudo ansible allservers -i inventory -m apt -a "name=python state=present" --become --ask-sudo-pass
- sudo ansible webservers -i inventory -m apt -a "pkg=ngnix state=present"  /install the ngnix package/
- sudo ansible webservers -i inventory -m service -a "name=ngnix state=started"  /start the ngnix service/
- sudo ansible webservers -i inventory -a "apt-get -y autoremove nginx"  /remove the pkg completely/
- sudo ansible-playbook Package_Play.yml -i inventory  / ansible playbook to install the nginx pkg/
- shotcut keys to commet multiple lines in sublime text: slect the line and toggle ctrl+/
- sudo ansible dbservers -i inventory -m apt -a "name=mysql state=present"  /install the mysql database package/
- sudo ansible webserver -i inventory -m setup  /will give the complete details of the server/
- sudo ansible Allservers -i inventory -m setup --tree ./setup / will dump all the details of each server into each file in a setup folder in current folder/

Handlers:
- Handlers are used to execute a task only the status of that task have actually changed. Example: Restarting the services to load changes(if changes are made)
- Task with asynchronous execution.
- Handler tasks are executed only when all the tasks in the playbooks are executed. Handler tasks are executed only once no matter how many time you call. we call handlers using notify 
Example:
---
- hosts: all

  tasks: 
    - name: Install Nginx
      apt: pkg=nginx state=installed update_cache=true
      notify:
        - Start Nginx

  handlers:
    - name: Start Nginx
      service: name=nginx state=started 


Conditional clause
- Only run the task when the condition is satisfied.
Example:
- apt: pkg=nginx state=present
  when: ansible_os_family=='ubuntu'

- apt: pkg=nginx state=present
  register: result

  service: name=nginx state=started
  when: (result|inactive(dead) or stdout|inactive(dead)

- command: ls /exist
  register: result
  ignore_errors: true

  debug: msg='Failure!'
  when: result|failed    /status options: failed/success/skipped

Templates
- nginx to work on ubuntu change the port 80 to another port at location /etc/nginx/site-available/default and copyt the change the index.debian.html file at locaiton /var/www/html/index.debian.html. access the site with 8009 port example:http:/localhost:8009


Ansible-vault:
- how to store and encrypt passwords/screts in yaml file using ansible-vault
	Declare a varible in inventory file like below
		ansible_ssh_pass={{password}}
	Create a yaml file in the same folder: Example- vars.yml
	Assigne a value to the pasword varible in yaml file like below
	    ---
	     password: "xxxx"
	Define the vars in the playbook like below
	    vars:
	     - 'vars.yml'
	Encrypt the vars.yml file using ansible-vault
		ansible-vault encrypt vars.yml

	Edit the file using the below command
		ansible-vault edit vars.yml

	Now run the playbook, it should pickup the password from vars.yml file
- Encrypted files will be in encrypted even after pushing them to github repository.

- Completed Router Configuration
